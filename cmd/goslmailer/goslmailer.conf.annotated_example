{
  "logfile": "/tmp/goslmailer.log",                 # if specified; append logs to this file; else; dump to stderr
  "defaultconnector": "msteams",                    # default connector to be used for message delivery for receivers without full 'connector:user' specification
  "connectors": {                                   # map of connector configurations
    "msteams": {                                    # each connector has it's own map of config attributes
      "name": "dev channel",                        # unused
      "spoolDir": "/tmp",                           # see below.
      "renderToFile": "yes",                        # if "yes"; dump rendered templates to working dir; else if "spool"; dump to spoolDir; else; send to teams url
      "url": "https://msteams/webhook/url",         # ms teams webhook url
      "adaptiveCardTemplate": "/path/template.json",# full path to adaptive card template file
      "useLookup": "GECOS"                          # which function from lookup package the connector uses to map cmdline userid to end-system userid
    },                                              #  available lookups ("GECOS", "none")
    "mailto": {
      "name": "original slurm mail, extended.",                # unused
      "mailCmd": "/bin/mail",                         # This would be the place to put the content of original slurm MailProg parameter, e.g. '/bin/mail'
      "mailCmdParams": "-s \"Job {{ .SlurmEnvironment.SLURM_JOB_ID }} ({{ .SlurmEnvironment.SLURM_JOB_NAME }}) {{ .SlurmEnvironment.SLURM_JOB_MAIL_TYPE }}\"",   # templateable subject line with data from JobContext structure
      "mailTemplate": "/etc/slurm/mailTemplate.tmpl",          # unused, to be used as mail body
      "allowList": ".+@(x|y).ac.at",                           # re2 expression https://github.com/google/re2/wiki/Syntax , describing e-mails that are allowed to send 
      "blockList": ""                                          # unused, block certain e-mail targets to use this connector
    },
    "textfile": {                                   # fictitious "textfile" connector, package code for it doesn't exist, implementation left as the exercise for the reader
      "path": "/tmp"                                # see above.
    }
  }
}
